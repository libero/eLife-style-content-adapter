import logging

logger = logging.getLogger(__name__)


def get_previous_task_name(context):
    if context['task'].upstream_list:
        return context['task'].upstream_list[0].task_id
    return None


def get_return_value_from_previous_task(context):
    previous_task = get_previous_task_name(context)
    return context['task_instance'].xcom_pull(task_ids=previous_task)


def get_file_name_passed_to_dag_run_conf_file(context):
    """
    Returns the value of the 'file' key in conf if it was supplied.

    :param context: key-values generated by a DAG run
    :return str: value of the conf 'file' key in conf
    """
    dag_run = context['dag_run']
    conf = dag_run.conf or {}
    file_name = conf.get('file')
    logger.info('FILE NAME PASSED FROM TRIGGER= %s', file_name)
    message = 'conf={\'file\': <file_name>} not passed to %s' % dag_run.dag_id
    assert file_name and isinstance(file_name, str), message
    return file_name
